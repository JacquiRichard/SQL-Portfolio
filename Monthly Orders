#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

/*How many orders were placed in January? */
SELECT COUNT(*) FROM bit_db.JanSales;

/* How many of those orders were for an iPhone? */ 
SELECT COUNT(*) FROM bit_db.JanSales WHERE product='iPhone';

/*Select the customer account numbers for all the orders that were placed in February. */
SELECT customers.acctnum
FROM bit_db.customers AS customers
LEFT JOIN FebSales AS feb
ON feb.orderID=customers.order_id;

/* Which product was the cheapest one sold in January, and what was the price?*/

SELECT DISTINCT product AS cheapest_product, MIN(price) AS cheapest_price 
FROM Bit_DB.JanSales
GROUP BY product, price
ORDER BY price ASC
LIMIT 1; 

/* What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products) */
SELECT product, SUM(quantity) * price AS revenue
FROM bit_db.JanSales
GROUP BY product
ORDER BY revenue DESC;

/* Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue? */
SELECT product, SUM(quantity) AS quantity, SUM(quantity) * price AS revenue
FROM bit_db.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

/* How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? */
SELECT COUNT(cust.acctnum) AS cust_2ormore_orders, AVG(feb.Quantity) * feb.price AS avg_spend
FROM Bit_db.FebSales AS feb
LEFT JOIN bit_db.customers AS cust
ON feb.orderid=cust.order_id
WHERE feb.quantity>2;


/* Narrowing down dates */
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'
ORDER BY orderdate;

/* Number of orders on 2/20/19 */
SELECT SUM(quantity)
FROM BIT_DB.Febsales 
WHERE orderdate LIKE '02/20/19%';

/* Practicing LIKE function */ 
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product LIKE '%Batteries%';

SELECT distinct Product, Price
FROM BIT_DB.FebSales
WHERE price LIKE '%.99%';

/* List all the products sold in Los Angeles in February, and include how many of each were sold. */
SELECT product, SUM(Quantity) as products_sold_in_LA
FROM BIT_DB.FebSales
WHERE location LIKE '%Los_Angeles%'
GROUP BY product
ORDER BY SUM(Quantity) DESC;

/* How many locations are there in New York that sold more than 1 product in January? */
SELECT count(distinct location)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND quantity>1;

/* Which NY locations sold the most in January? */
SELECT distinct location, quantity
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%' AND quantity>1
GROUP BY location
ORDER BY quantity DESC;

/* How many of each type of headphone were sold in February? */ 
SELECT product, SUM(quantity) as quantity
FROM BIT_DB.FebSales
WHERE product LIKE '%Headphones%'
GROUP BY product;

/* What was the average amount spent per account in February? 
the average amount spent / number of accounts, not the amount spent by each account */
SELECT SUM(feb.quantity*feb.price)/COUNT(cust.acctnum) AS avg_spend_per_acct
FROM BIT_DB.FebSales AS feb
LEFT JOIN BIT_DB.customers AS cust
ON feb.orderID=cust.order_id;

 /* What was the average quantity of products purchased per account in February? 
 overall average, not the average for each account individually */
SELECT SUM(feb.quantity)/COUNT(cust.acctnum) as avg_quantity_per_acct
FROM BIT_DB.FebSales as feb
LEFT JOIN BIT_DB.customers as cust
ON feb.orderid=cust.order_id;

/* Which product brought in the most revenue in January and how much revenue did it bring in total? */
SELECT product, SUM(quantity*price) 
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY(quantity*price) DESC
LIMIT 1;
